convert_var	envp.c	/^char	*convert_var(char *line, int i_dollar, char */
convert_var_in_line	envp.c	/^char	*convert_var_in_line(char *line, char *envp[]/
convert_var_in_node	envp.c	/^void	convert_var_in_node(t_cmd_tree **node, char */
free_node	node.c	/^void	free_node(t_cmd_tree *node)$/
free_tree	tree.c	/^void	free_tree(t_cmd_tree *node)$/
ft_exit	exit.c	/^int	ft_exit(void)$/
ft_is_last_ope	node_check.c	/^int	ft_is_last_ope(t_cmd_tree *node)$/
ft_is_leave	node_check.c	/^int	ft_is_leave(t_cmd_tree *node)$/
ft_is_left_child	node_check.c	/^int	ft_is_left_child(t_cmd_tree *node)$/
ft_is_operand	line_split.c	/^int	ft_is_operand(char *data)$/
ft_is_quoted	line_split.c	/^int	ft_is_quoted(char *c, int i)$/
ft_var_len	envp.c	/^size_t	ft_var_len(char *var_start)$/
init_subtree	pipex_tree.c	/^void	init_subtree(t_cmd_tree *node, int fd[2], pid/
line_not_finished	prompting.c	/^int	line_not_finished(char *line)$/
line_to_tree	line_split.c	/^t_cmd_tree	*line_to_tree(char *cmd_line, char *env/
new_node	node.c	/^t_cmd_tree	*new_node(char *data, t_cmd_tree *paren/
node_exe	node.c	/^void	node_exe(t_cmd_tree *node)$/
node_pipex	pipex_tree.c	/^void	node_pipex(t_cmd_tree *node)$/
node_split_multisep	tree.c	/^void	node_split_multisep(t_cmd_tree **root, char */
not_escaped	prompting.c	/^int	not_escaped(char *str, int i)$/
print_tree	tree.c	/^void	print_tree(t_cmd_tree *root, int level)$/
read_multilines	prompting.c	/^char	*read_multilines(char *prompt)$/
return_env_var	envp.c	/^char	*return_env_var(char *var, size_t var_len, ch/
sig_func	exit.c	/^void	sig_func(int sig)$/
tree_parse_split	tree.c	/^void	tree_parse_split(t_cmd_tree **node, char **se/
tree_parsing	tree.c	/^void	tree_parsing(t_cmd_tree *node)$/
